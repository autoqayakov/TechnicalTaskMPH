plugins {
    id 'java'
    id 'java-library'
    id 'groovy'
    id "io.qameta.allure" version "2.8.1"
}

apply plugin: 'java'
apply plugin: 'io.qameta.allure'

//allure {
//    autoconfigure = true
//    resultsDir = file("${project.buildDir}/allure-results")
//    useCucumberJVM {
//        version = '2.13.0'
//    }
//}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    google()
}

ext {
    cucumberVersion = '4.3.0'
    springVersion = '5.2.0.RELEASE'
    testNGVersion = '6.14.3'
    allureVersion = '2.13.0'
}

dependencies {
    // Allure
//    implementation "io.qameta.allure:allure-cucumber4-jvm:$allureVersion"
//    implementation "io.qameta.allure:allure-commandline:$allureVersion"
//    implementation "io.qameta.allure:allure-generator:$allureVersion"
//    implementation "io.qameta.allure:allure-junit:$allureVersion"
//    implementation "io.qameta.allure:allure-plugin-api:$allureVersion"
//    implementation "io.qameta.allure:allure-rest-assured:$allureVersion"
//    implementation "io.qameta.allure:allure-gradle:$allureVersion"
    implementation "org.testng:testng:$testNGVersion"

    implementation 'org.codehaus.groovy:groovy-all:2.5.8'
    //cucumber
    implementation "io.cucumber:cucumber-java:$cucumberVersion"
    implementation "io.cucumber:cucumber-junit:$cucumberVersion"
    implementation "io.cucumber:cucumber-java8:$cucumberVersion"
    implementation "io.cucumber:cucumber-core:$cucumberVersion"
    implementation "io.cucumber:cucumber-spring:$cucumberVersion"
    implementation "io.cucumber:cucumber-testng:$cucumberVersion"
    //spring
    implementation "org.springframework:spring-context:$springVersion"
    implementation "org.springframework:spring-test:$springVersion"
    implementation "org.springframework:spring-tx:$springVersion"

    implementation "org.apache.commons:commons-csv:1.8"
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
    implementation group: 'org.codehaus.groovy', name: 'groovy-xml', version: '2.5.8'
    implementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.5.1', ext: 'pom'
    implementation group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.5.1'

    implementation group: 'com.codeborne', name: 'selenide', version: '5.2.3'
    implementation group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.1.2'
    implementation group: 'io.rest-assured', name: 'rest-assured-all', version: '4.1.2'
    implementation group: 'io.rest-assured', name: 'rest-assured-common', version: '4.1.2'
    implementation group: 'io.rest-assured', name: 'json-path', version: '4.1.2'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.7'
    implementation group: 'org.json', name: 'json', version: '20090211'
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.8'
    implementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

configurations {
    addToClassLoader
    testOutput.extendsFrom testRuntime
    cucumberRuntime {
        extendsFrom testRuntime
    }

    processTestResources {
        filesMatching('**/config.properties') {
            expand(project.properties)
        }
    }
}

test {
    useTestNG()
    scanForTestClasses = false
    testLogging {
        events 'passed', 'failed'
        showStandardStreams = true
    }
    ignoreFailures = true
}

//build.dependsOn {
//    [compileTestGroovy, processTestResources]
//}

